@using Orchard.Utility.Extensions;
@*For Request.ToUrlString()*@
@using System.Web.Mvc;
@{
    string returnUrl = "";

    if (!Model.IsAuthorized)
    {
        if (!Model.AutoLogin)
        {
            returnUrl = Url.Action("Connect", new { Controller = "Connect", Area = "Piedone.Facebook.Suite", Permissions = Model.Permissions, OnlyAllowVerified = Model.OnlyAllowVerified, ReturnUrl = (Context.Request.QueryString["ReturnUrl"] ?? Context.Request.RawUrl) });
        }
    }
    else
    {
        returnUrl = Context.Request.QueryString["ReturnUrl"] ?? Context.Request.RawUrl;
    }
}
@{
    Script.Require("FacebookConnect").AtHead();
}
@if (!Model.IsAuthorized)
{
    <a href="" id="facebook-connect-link">
        @T("Connect with Facebook")</a>
    <script type="text/javascript">
        $.facebookConnect.initializeLogin("@returnUrl", "@Model.Permissions");
    </script>
@*<fb:login-button>@T("Connect with Facebook")</fb:login-button>*@
}
else
{
    <div id="current-facebook-user-profile">
        <strong id="current-facebook-user-name">
            @Model.CurrentUser.Name
        </strong><a href="@Model.CurrentUser.Link">
            <img src="@Model.CurrentUser.PictureLink" id="current-facebook-user-picture" alt="@T("{0}'s profile picture", Model.CurrentUser.Name)" />
        </a>
    </div>
    
    <a href="" id="facebook-logout-link">
        @T("Logout from Facebook")</a>
    <script type="text/javascript">
        $.facebookConnect.initializeLogout("@returnUrl");
    </script>
}